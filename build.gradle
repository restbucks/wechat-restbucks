buildscript {
    ext {
        spockVersion = "1.1-groovy-2.4-rc-3"
        snippetsDir = file('build/generated-snippets')
        restdocsVersion = '1.2.0.RELEASE'
        contractVersion = '1.1.0.RELEASE'
        awaitilityVersion = '3.0.0'
    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.3.RELEASE'
    id "io.spring.dependency-management" version "1.0.1.RELEASE"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'

apply from: 'gradle/git-hooks.gradle'
apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/findbugs.gradle'
apply from: 'gradle/build-version.gradle'
apply from: 'gradle/maven-publish.gradle'
apply from: 'gradle/boot-info.gradle' // plugins is declared in plugins block due to gradle restrictions

group = "org.restbucks.wechat"

sourceCompatibility = 1.8
targetCompatibility = 1.8


sourceSets {
    test {
        resources {
            srcDir 'src/test/data'
            srcDir 'src/test/docker'
        }
    }
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencyManagement {
    dependencies {
        dependency "org.projectlombok:lombok:1.16.10"
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile group: 'org.springframework.data', name: 'spring-data-rest-hal-browser', version: '2.6.3.RELEASE'



    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.9'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.2'
    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${restdocsVersion}"
    testCompile "org.springframework.restdocs:spring-restdocs-mockmvc:${restdocsVersion}"
    testCompile "org.springframework.restdocs:spring-restdocs-core:${restdocsVersion}"
    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-contract-wiremock', version: "${contractVersion}"
    testCompile group: 'org.awaitility', name: 'awaitility-groovy', version: "${awaitilityVersion}"
}

test {
    exclude '**/smoke/*'
    exclude '**/specs/*'
    exclude '**/*LearningTest*'
    exclude '**/*Console*'
    outputs.dir snippetsDir
}

task smokeTest(type: Test) {
    // this task will be executed in isolation since all artifacts have been built and deployed
    dependsOn = []

    include '**/smoke/*'

    outputs.upToDateWhen { false }//force to always rerun

    reports {
        html {
            destination = "$buildDir/reports/tests/smoke"
        }
    }
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

test.finalizedBy([asciidoctor, jacocoTestReport])

springBoot {
    executable = true
}

idea {
    module {
        scopes.COMPILE.plus += [configurations.compileOnly]
    }
}
